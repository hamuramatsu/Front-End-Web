{"version":3,"file":"index.js","sources":["../../src/overlay-components/components/UnionInsertMenuOverlay.tsx","../../src/overlay-components/defineOverlayComponent.ts","../../src/overlay-components/defineOverlayComponents.ts"],"sourcesContent":["import type {SchemaNode, SchemaUnionNode} from '@repo/visual-editing-helpers'\nimport {AddIcon} from '@sanity/icons'\nimport type {SchemaType} from '@sanity/types'\nimport {Button, Flex} from '@sanity/ui'\nimport {\n  useCallback,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type HTMLProps,\n  type MouseEvent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport type {ElementNode, OverlayComponent} from '../../types'\nimport {useDocuments} from '../../ui/optimistic-state/useDocuments'\nimport {getArrayInsertPatches} from '../../util/mutations'\nimport {InsertMenuPopover} from './InsertMenu'\n\nconst AddButton = styled(Button)`\n  position: relative;\n  transform: var(--add-button-position);\n\n  --add-button-position: translateY(0);\n  [data-position='top'] & {\n    --add-button-position: translateY(-50%);\n  }\n  [data-position='right'] & {\n    --add-button-position: translateX(50%);\n  }\n  [data-position='bottom'] & {\n    --add-button-position: translateY(50%);\n  }\n  [data-position='left'] & {\n    --add-button-position: translateX(-50%);\n  }\n`\nconst HoverAreaRoot = styled(Flex)`\n  pointer-events: all;\n  height: var(--hover-area-height);\n  width: var(--hover-area-width);\n\n  --hover-area-height: 100%;\n  --hover-area-width: 100%;\n  &[data-position='top'],\n  &[data-position='bottom'] {\n    --hover-area-height: 48px;\n  }\n  &[data-position='right'],\n  &[data-position='left'] {\n    --hover-area-width: 48px;\n  }\n`\n\nconst HoverArea: FunctionComponent<{\n  element: ElementNode\n  hoverAreaExtent: HTMLProps<HTMLDivElement>['height' | 'width']\n  node: SchemaUnionNode\n  onAddUnion: (insertPosition: 'before' | 'after', name: string) => void\n  position: 'top' | 'right' | 'bottom' | 'left'\n}> = (props) => {\n  const {element, hoverAreaExtent, node, onAddUnion, position} = props\n  const [showButton, setShowButton] = useState(false)\n  const onEnter = useCallback(() => {\n    setShowButton(true)\n  }, [])\n  const onLeave = useCallback(() => {\n    setShowButton(false)\n  }, [])\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  // This function clones and dispatches MouseEvents so that they can be handled\n  // by the underlying element. This is useful because we want to handle hover\n  // events on the overlay element to display the add button, but let the\n  // underlying element handle click events, drag and drop, etc.\n  const relayEventToElement = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      if (event.target === ref.current) {\n        const newEvent = new MouseEvent(event.type, {\n          ...event.nativeEvent,\n          bubbles: true,\n          cancelable: true,\n        })\n        element.dispatchEvent(newEvent)\n      }\n    },\n    [element],\n  )\n\n  // The element that the popover containing the InsertMenu will be positioned\n  // relative to (in this case, the AddButton).\n  const [popoverReferenceElement, setPopoverReferenceElement] = useState<HTMLElement | null>(null)\n\n  const [menuVisible, setMenuVisible] = useState(false)\n\n  const dismissPortal = useCallback(() => {\n    setMenuVisible(false)\n    setShowButton(false)\n  }, [])\n\n  const onSelect = useCallback(\n    (schemaType: SchemaType) => {\n      setMenuVisible(false)\n      const insertPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n      onAddUnion(insertPosition, schemaType.name)\n    },\n    [onAddUnion, position],\n  )\n\n  const align = position === 'top' ? 'flex-start' : position === 'bottom' ? 'flex-end' : 'center'\n  const justify = position === 'left' ? 'flex-start' : position === 'right' ? 'flex-end' : 'center'\n  const blockDirection = position === 'top' || position === 'bottom' ? 'height' : 'width'\n\n  return (\n    <HoverAreaRoot\n      align={align}\n      data-position={position}\n      data-sanity-overlay-element\n      justify={justify}\n      onClick={relayEventToElement}\n      onContextMenu={relayEventToElement}\n      onMouseDown={relayEventToElement}\n      onMouseEnter={onEnter}\n      onMouseLeave={onLeave}\n      onMouseUp={relayEventToElement}\n      ref={ref}\n      style={{\n        [blockDirection]: hoverAreaExtent,\n      }}\n    >\n      {(showButton || menuVisible) && (\n        <AddButton\n          ref={setPopoverReferenceElement}\n          icon={AddIcon}\n          mode={'ghost'}\n          onClick={() => setMenuVisible((visible) => !visible)}\n          radius={'full'}\n          selected={menuVisible}\n        />\n      )}\n      {menuVisible && popoverReferenceElement && (\n        <InsertMenuPopover\n          node={node}\n          onDismiss={dismissPortal}\n          referenceElement={popoverReferenceElement}\n          onSelect={onSelect}\n        />\n      )}\n    </HoverAreaRoot>\n  )\n}\n\nexport const UnionInsertMenuOverlay: OverlayComponent<\n  {\n    direction?: 'horizontal' | 'vertical'\n    hoverAreaExtent?: HTMLProps<HTMLDivElement>['height' | 'width']\n  },\n  SchemaUnionNode<SchemaNode>\n> = (props) => {\n  const {direction = 'vertical', element, hoverAreaExtent, node, parent} = props\n\n  const {getDocument} = useDocuments()\n\n  const onAddUnion = useCallback(\n    (insertPosition: 'before' | 'after', name: string) => {\n      const doc = getDocument(node.id)\n      const patches = getArrayInsertPatches(node, name, insertPosition)\n      doc.patch(patches)\n    },\n    [getDocument, node],\n  )\n\n  if (!parent) return null\n\n  return (\n    <Flex\n      height=\"fill\"\n      width=\"fill\"\n      direction={direction === 'horizontal' ? 'row' : 'column'}\n      justify=\"space-between\"\n    >\n      <HoverArea\n        element={element}\n        hoverAreaExtent={hoverAreaExtent}\n        node={parent}\n        onAddUnion={onAddUnion}\n        position={direction === 'horizontal' ? 'left' : 'top'}\n      />\n      <HoverArea\n        element={element}\n        hoverAreaExtent={hoverAreaExtent}\n        node={parent}\n        onAddUnion={onAddUnion}\n        position={direction === 'horizontal' ? 'right' : 'bottom'}\n      />\n    </Flex>\n  )\n}\n\nexport default UnionInsertMenuOverlay\n","import type {ComponentProps} from 'react'\nimport type {OverlayComponent, OverlayComponentProps} from '../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function defineOverlayComponent<T extends OverlayComponent<Record<string, unknown>, any>>(\n  component: T,\n  props?: Omit<ComponentProps<T>, keyof OverlayComponentProps>,\n): {component: T; props: typeof props} {\n  return {\n    component: component,\n    props: props,\n  }\n}\n","import type {OverlayComponent, OverlayComponentResolver} from '../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function defineOverlayComponents<T extends OverlayComponent>(\n  resolver: OverlayComponentResolver<T>,\n): typeof resolver {\n  return resolver\n}\n"],"names":["Flex","AddIcon","InsertMenuPopover","dt","Button","P","jsx","jsxs","c","useState","useRef","useDocuments","getArrayInsertPatches","AddButton","styled","HoverAreaRoot","HoverArea","props","$","_c","element","hoverAreaExtent","node","onAddUnion","position","showButton","setShowButton","t0","Symbol","for","onEnter","t1","onLeave","ref","t2","event","target","current","newEvent","MouseEvent","type","nativeEvent","bubbles","cancelable","dispatchEvent","relayEventToElement","popoverReferenceElement","setPopoverReferenceElement","menuVisible","setMenuVisible","t3","dismissPortal","t4","schemaType","name","onSelect","align","justify","blockDirection","t5","t6","t7","t8","mode","onClick","_temp","radius","style","UnionInsertMenuOverlay","direction","parent","undefined","getDocument","insertPosition","doc","id","patches","patch","height","width","visible","defineOverlayComponent","component","defineOverlayComponents","resolver"],"mappings":"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"}