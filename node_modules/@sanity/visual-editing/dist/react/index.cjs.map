{"version":3,"file":"index.cjs","sources":["../../src/ui/optimistic-state/machines/datasetMutatorMachine.ts","../../src/ui/comlink/index.ts","../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/util/useDragEvents.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/ElementOverlay.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Overlays.tsx","../../src/ui/useController.tsx","../../src/ui/Refresh.tsx","../../src/ui/VisualEditing.tsx","../../src/ui/optimistic-state/machines/createSharedListener.ts"],"sourcesContent":["/**\n * The logic here is intended to live inside a preview iframe, and listen to events from the parent frame.\n * It also supports running in a \"detached\" mode, where it has to setup authenticated EventSource conenctions and perform data fetching itself.\n */\n\nimport {type SanityClient} from '@sanity/client'\nimport {\n  createSharedListener,\n  documentMutatorMachine,\n  type DocumentMutatorMachineInput,\n  type DocumentMutatorMachineParentEvent,\n} from '@sanity/mutate/_unstable_machine'\nimport {assertEvent, assign, emit, setup, stopChild, type ActorRefFrom} from 'xstate'\nimport type {createDocumentMutator} from '../../comlink'\n\nexport interface DatasetMutatorMachineInput extends Omit<DocumentMutatorMachineInput, 'id'> {\n  client: SanityClient\n  /** A shared listener can be provided, if not it'll be created using `client.listen()` */\n  sharedListener?: ReturnType<typeof createSharedListener>\n}\n\nexport const datasetMutatorMachine = setup({\n  types: {} as {\n    context: {\n      client: SanityClient\n      /** A shared listener can be provided, if not it'll be created using `client.listen()` */\n      sharedListener?: ReturnType<typeof createSharedListener>\n      documents: Record<string, ActorRefFrom<ReturnType<typeof createDocumentMutator>>>\n    }\n    events:\n      | {type: 'observe'; documentId: string}\n      | {type: 'unobserve'; documentId: string}\n      | {type: 'add document actor'; documentId: string}\n      | {type: 'stop document actor'; documentId: string}\n      | DocumentMutatorMachineParentEvent\n    input: DatasetMutatorMachineInput\n    emitted: DocumentMutatorMachineParentEvent\n  },\n  actions: {\n    'emit sync event': emit(({event}) => {\n      assertEvent(event, 'sync')\n      return event\n    }),\n    'emit mutation event': emit(({event}) => {\n      assertEvent(event, 'mutation')\n      return event\n    }),\n    'emit rebased event': emit(({event}) => {\n      assertEvent(event, ['rebased.local', 'rebased.remote'])\n      return event\n    }),\n    'emit pristine event': emit(({event}) => {\n      assertEvent(event, ['pristine'])\n      return event\n    }),\n    'add document actor': assign({\n      documents: ({context, event, spawn}) => {\n        assertEvent(event, 'observe')\n        const id = event.documentId\n        // Adding the same documentId multiple times is a no-op\n        if (context.documents[id]) return context.documents\n        return {\n          ...context.documents,\n          [id]: spawn('documentMutatorMachine', {\n            input: {\n              id,\n              client: context.client,\n              sharedListener: context.sharedListener || createSharedListener(context.client),\n            },\n            id,\n          }),\n        }\n      },\n    }),\n    'stop remote snapshot': stopChild(({context, event}) => {\n      assertEvent(event, 'unobserve')\n      return context.documents[event.documentId]!\n    }),\n    'remove remote snapshot from context': assign({\n      documents: ({context, event}) => {\n        assertEvent(event, 'unobserve')\n        // Removing a non-existing documentId is a no-op\n        if (!context.documents[event.documentId]) return context.documents\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const {[event.documentId]: _, ...documents} = context.documents\n        return documents\n      },\n    }),\n  },\n  actors: {\n    documentMutatorMachine,\n  },\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QBsD2BjAhsgIhgrgLZgB2ALgMTICWsZpA2gAwC6ioADqrNWdaiXYgAHogC0ADgBMAOgkA2ACyKArBICcTdfKXSANCACeiFQHYZpgMxWV800yYqp6gIyn5AXw8G0WXAWJyCnwSGjpGViEuHj4BIVEEKUt5OSlFU1smFwkFW0sDY0T1GRUXRXkXKVN7HSYJJkUvHwxsPHQiUjIZDgAnWj4SMApCfDJMemY2JBBo3n5BaYSXeVlbKRUsiXdFSxcXfKNERSqZTbr1zVMJNyaQX1aAzpkIah6yQwp0VEJCXkmo7hzOKLRDLFwyFxaSzXKTOKQudSKCQFRDOczqCSWJjwjbHCQqRFebwgEioCBwIT3fztQJkAExebxcQuFEIZaWGRIrF7dSXKTyFSNYlUtodcjdPp0aiDelAhagBLpVmWAmc46mNwSZTyLQuFS3EWPcUvN6FTiA2LykSoq6c6wbCqVUzparKioyRFVfkq1zqNSWIkeIA */\n  id: 'dataset-mutator',\n  context: ({input}) => ({\n    documents: {},\n    client: input.client,\n    sharedListener: input.sharedListener,\n  }),\n\n  on: {\n    'sync': {actions: ['emit sync event']},\n    'mutation': {actions: ['emit mutation event']},\n    'rebased.*': {actions: ['emit rebased event']},\n    'pristine': {actions: ['emit pristine event']},\n    'observe': {\n      actions: ['add document actor'],\n    },\n    'unobserve': {\n      actions: ['stop remote snapshot', 'remove remote snapshot from context'],\n    },\n  },\n\n  initial: 'pristine',\n\n  states: {\n    pristine: {},\n  },\n})\n","import type {SanityClient} from '@sanity/client'\nimport {SanityEncoder, type Transaction} from '@sanity/mutate'\nimport {\n  documentMutatorMachine,\n  type DocumentMutatorMachineParentEvent,\n} from '@sanity/mutate/_unstable_machine'\nimport {enqueueActions, fromPromise} from 'xstate'\nimport type {VisualEditingNode} from '../../types'\nimport {datasetMutatorMachine} from '../optimistic-state/machines/datasetMutatorMachine'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createDocumentMutator = (comlink: VisualEditingNode) => {\n  const fetchSnapshot = fromPromise(\n    async ({input, signal}: {input: {id: string; client: SanityClient}; signal: AbortSignal}) => {\n      const {id} = input\n      const {snapshot} = await comlink.fetch(\n        'visual-editing/fetch-snapshot',\n        {documentId: id},\n        {\n          signal,\n        },\n      )\n      return snapshot\n    },\n  )\n\n  const submitMutations = fromPromise(\n    async ({input}: {input: {client: SanityClient; transactions: Transaction[]}}) => {\n      const {transactions} = input\n      for (const transaction of transactions) {\n        const data = SanityEncoder.encodeTransaction(transaction)\n        return comlink.post('visual-editing/mutate', data)\n      }\n    },\n  )\n\n  return documentMutatorMachine.provide({\n    actions: {\n      'send sync event to parent': enqueueActions(({enqueue}) => {\n        // Original action provided by the `documentMutatorMachine`\n        enqueue.sendParent(\n          ({context}) =>\n            ({\n              type: 'sync',\n              id: context.id,\n              document: context.remote!,\n            }) satisfies DocumentMutatorMachineParentEvent,\n        )\n        // Additional action so that we can determine when the snapshot is ready\n        enqueue.emit(({context}) => ({type: 'ready', snapshot: context.local}))\n      }),\n    },\n    actors: {\n      'fetch remote snapshot': fetchSnapshot,\n      'submit mutations as transactions': submitMutations,\n    },\n  })\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createDatasetMutator = (comlink: VisualEditingNode) => {\n  return datasetMutatorMachine.provide({\n    actors: {\n      documentMutatorMachine: createDocumentMutator(comlink),\n    },\n  })\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {useDocuments} from '../ui/optimistic-state/useDocuments'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n  resolvedTypes: ResolvedSchemaTypeMap\n  schema: SchemaType[]\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@repo/visual-editing-helpers'\nimport {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui'\nimport {type FunctionComponent} from 'react'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\nimport type {OptimisticDocument} from '../optimistic-state/useDocuments'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {useDocuments} from '../optimistic-state/useDocuments'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n    }\n  }, [node, onDismiss])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","import type {PreviewSnapshot} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {pathToUrlString} from '@repo/visual-editing-helpers'\nimport {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is ReactElement => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useCustomComponents(componentContext, componentResolver)\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingBottom={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n\n      {title && (\n        <Tab gap={1} paddingBottom={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useLinkHref(props.href, referer)\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n\nfunction useLinkHref(href: string, referer: string) {\n  return useMemo(() => {\n    try {\n      const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n      parsed.searchParams.set('preview', referer)\n      return parsed.toString()\n    } catch {\n      return href\n    }\n  }, [href, referer])\n}\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {SanityNode, VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {useEffect, useMemo, useState, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  const fetchSchema = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    const controller = new AbortController()\n    fetchSchema(controller.signal)\n    return () => controller.abort()\n  }, [fetchSchema])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n\n  useEffect(() => {\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      if (!paths.length || !comlink) return\n      try {\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        setResolvedTypes(response.types)\n        reportedPathsRef.current = paths\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n\n    const controller = new AbortController()\n    const paths = getPathsWithUnresolvedTypes(elements)\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      reportPaths(paths, controller.signal)\n    }\n    return () => controller.abort()\n  }, [comlink, elements])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(\n    () => ({\n      getField,\n      getType,\n      resolvedTypes,\n      schema: schema || [],\n    }),\n    [getField, getType, resolvedTypes, schema],\n  )\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@repo/visual-editing-helpers'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `@sanity/presentation` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import {DRAFTS_PREFIX} from '@repo/visual-editing-helpers/csm'\nimport type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return {\n          ...sanity,\n          id: 'isDraft' in sanity ? `${DRAFTS_PREFIX}${sanity.id}` : sanity.id,\n        }\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import {isAltKey, isHotkey, type VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {Status} from '@sanity/comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {getDraftId, getPublishedId} from '../util/documents'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes.ts'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {useOptimisticActor, useOptimisticActorReady} from './optimistic-state/useOptimisticActor'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider.tsx'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {comlink, componentResolver: _componentResolver, inFrame, zIndex} = props\n\n  const [status, setStatus] = useState<Status>()\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n      comlink?.onStatus((status) => {\n        setStatus(status as Status)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if ((inFrame && status !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            componentResolver={componentResolver}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    isDragging,\n    optimisticActorReady,\n    status,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n      <LayerProvider>\n        <PortalProvider element={rootElement}>\n          <SchemaProvider comlink={comlink} elements={elements}>\n            <PreviewSnapshotsProvider comlink={comlink}>\n              <SharedStateProvider comlink={comlink}>\n                <Root\n                  data-fading-out={fadingOut ? '' : undefined}\n                  data-overlays={overlaysFlash ? '' : undefined}\n                  ref={setRootElement}\n                  $zIndex={zIndex}\n                >\n                  <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                  <OverlaysController\n                    comlink={comlink}\n                    dispatch={dispatch}\n                    inFrame={inFrame}\n                    onDrag={updateDragPreviewCustomProps}\n                    overlayEnabled={overlayEnabled}\n                    rootElement={rootElement}\n                  />\n                  {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                  {elementsToRender}\n\n                  {isDragging && !dragMinimapTransition && (\n                    <>\n                      {dragInsertPosition && (\n                        <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                      )}\n                      {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                      {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                    </>\n                  )}\n                  {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                </Root>\n              </SharedStateProvider>\n            </PreviewSnapshotsProvider>\n          </SchemaProvider>\n        </PortalProvider>\n      </LayerProvider>\n    </ThemeProvider>\n  )\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport type {OverlayController, OverlayEventHandler} from '../types'\nimport {useOptimisticActorReady} from './optimistic-state/useOptimisticActor'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>()\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, optimisticActorReady])\n\n  return overlayController\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {createNode, createNodeMachine} from '@sanity/comlink'\nimport {useEffect, useState, type FunctionComponent} from 'react'\nimport {createActor} from 'xstate'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\nimport {createDatasetMutator} from './comlink'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {setActor} from './optimistic-state/context'\nimport {createSharedListener} from './optimistic-state/machines/createSharedListener'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\n\n/**\n * @public\n */\nexport const VisualEditing: FunctionComponent<VisualEditingOptions> = (props) => {\n  const {components, history, refresh, zIndex} = props\n  const inFrame = window.self !== window.top || window.opener\n\n  const [comlink, setComlink] = useState<VisualEditingNode | undefined>(undefined)\n\n  useEffect(() => {\n    if (!inFrame) return\n    const comlink = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    setComlink(comlink)\n\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const actor = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    // Fetch features to determine if optimistic updates are supported\n    const controller = new AbortController()\n    comlink\n      .fetch('visual-editing/features', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(actor)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    actor.start()\n    comlink.start()\n\n    return () => {\n      controller.abort()\n      actor.stop()\n      comlink.stop()\n    }\n  }, [inFrame])\n\n  return (\n    <>\n      <Overlays\n        comlink={comlink}\n        componentResolver={components}\n        inFrame={inFrame}\n        zIndex={zIndex}\n      />\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n}\nVisualEditing.displayName = 'VisualEditing'\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n"],"names":["datasetMutatorMachine","setup","types","actions","emit","event","assertEvent","assign","documents","context","spawn","id","documentId","input","client","sharedListener","createSharedListener","stopChild","_","actors","documentMutatorMachine","createMachine","on","sync","mutation","pristine","observe","unobserve","initial","states","createDocumentMutator","comlink","fetchSnapshot","fromPromise","async","signal","snapshot","fetch","submitMutations","transactions","transaction","data","SanityEncoder","encodeTransaction","post","provide","enqueueActions","enqueue","sendParent","type","document","remote","local","History","props","$","_c","history","t0","t1","t2","t3","update","useEffect","subscribe","title","Meta","sendMeta","observer","MutationObserver","target","nodeName","head","subtree","characterData","childList","disconnect","_temp","customEvent","CustomEvent","detail","cancelable","window","dispatchEvent","SchemaContext","createContext","useSchema","useContext","Error","getArrayRemoveAction","node","doc","patch","getSnapshot","getArrayRemovePatches","getArrayInsertAction","insertType","position","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getContextMenuItems","field","parent","items","push","getDuplicateItem","getRemoveItems","getMoveItems","label","icon","InsertAboveIcon","action","name","InsertBelowIcon","getContextMenuArrayItems","options","insertMenu","width","views","some","view","undefined","component","boundaryElement","jsx","InsertMenuWrapper","onSelect","schemaType","of","filter","item","map","t","getNodeIcon","getContextMenuUnionItems","Promise","resolve","CopyIcon","RemoveIcon","withDivider","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","getArrayMovePatches","length","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","SortIcon","t4","Symbol","for","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","InsertMenu","MenuGroup","fontSize","b","popover","space","POPOVER_MARGINS","ContextMenuItem","onDismiss","onClick","MenuDivider","hotkeys","MenuItem","text","disabled","t5","itemIndex","jsxRuntime","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","getDocument","useDocuments","setItems","t6","fetchContextMenuItems","items_0","getBoundingClientRect","bottom","left","right","top","height","contextMenuReferenceElement","t7","t8","t9","t10","minWidth","maxWidth","Box","flex","Text","size","Spinner","t11","t12","t13","t14","t15","Stack","children","weight","jsxs","Flex","gap","Fragment","i","Menu","m","style","t16","t17","t18","t19","t20","Popover","open","content","PopoverPortal","PreviewSnapshotsContext","Root","styled","Card","Actions","ActionOpen","Tab","Labels","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","path","baseUrl","tool","workspace","createEditUrl","pathToUrlString","studioPath","fromString","createIntentLink","href","previewSnapshots","usePreviewSnapshots","bb0","find","_id","bb1","value","componentContext","customComponents","resolved","isReactElementOverlayComponent","isValidElement","Array","isArray","useCustomComponents","dangerouslySetInnerHTML","__html","DocumentIcon","paddingBottom","Link","marginRight","className","DragHandleIcon","T","props_0","PointerEvents","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","h","transform","current","scrollIntoView","behavior","block","inline","scrollMode","referer","useSyncExternalStore","_temp2","_temp3","useMemo","parsed","URL","location","origin","searchParams","set","toString","useLinkHref","as","rel","onStoreChange","handlePopState","addEventListener","removeEventListener","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","offsetMultiplier","markerThickness","startX","endX","offset","Math","min","startY","endY","max","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","u","theme","useTheme_v2","radius","number","inMin","inMax","outMin","outMax","clamp","childRects","imageRects","textRects","color","from","r_1","r","fill","viewBox","shadow","overflow","tone","scheme","tagName","r_0","OverlayMinimapPrompt","align","Hotkeys","keys","ExpandIcon","E","elementsReducer","elements","message","e","activated","sanity","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","slice","startsWith","insertPosition","display","groupRect","PreviewSnapshotsProvider","setPreviewSnapshots","snapshots","Provider","isSanityNode","isDocumentSchemaType","isTypeSchemaType","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","response","suppressWarnings","fetchSchema","controller","AbortController","abort","reportedPathsRef","reportPaths","controller_0","paths_0","reduce","acc","includes","split","toReversed","part","join","popUnkeyedPathSegments","getPathsWithUnresolvedTypes","paths","p","signal_0","response_0","_type","node_0","schemaType_0","nodePath","flatMap","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","get","Boolean","console","warn","store","initialState","listeners","Set","getState","setState","fn","forEach","l","add","listener","delete","createStore","SharedStateProvider","catch","value_0","SharedStateContext","prev","key","Object","fromEntries","entries","reason","debug","e_0","s","DRAFTS_PREFIX","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","useOptimisticActor","id_0","send","getDraftId","getPublishedId","id_1","OverlaysController","dispatch","inFrame","onDrag","overlayEnabled","rootElement","dispatchDragEndEvent","handler","preventInsertDefault","reference","getReferenceNodeAndInsertPosition","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","arrayPath","referenceItemKey","elementValue","getFromPath","at","remove","_key","insert","useDragEndEvents","enabled","dragGroup","flow","cursor","removeProperty","useController","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","activate","deactivate","Overlays","_componentResolver","status","setStatus","useReducer","setRootElement","setOverlayEnabled","unsubs","data_0","onStatus","status_0","usePerspectiveSync","then","unsub","useReportDocuments","lastReported","perspective_0","reportDocuments","nodes","nodeIds","a","has","isEqualSets","documentsOnPage","projectId","_projectId","dataset","_dataset","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","_temp4","handleKeyUp","isAltKey","_temp5","handleKeydown","_temp6","isHotkey","_temp7","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp8","closeContextMenu","_temp9","element_0","getAttribute","e_2","sanityNodesExistInSameArray","elementsToRender","t21","t22","t23","t24","t25","t26","t27","LayerProvider","PortalProvider","ThemeProvider","studioTheme","prevId","isHTMLAnchorElement","isHTMLElement","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","VisualEditing","components","self","opener","setComlink","comlink_0","createNode","connectTo","createNodeMachine","createCompatibilityActors","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","datasetMutator","createActor","withConfig","features","optimistic","setActor","start","stop","displayName","exports","createDataAttribute","createDataAttribute_index","c"],"mappings":"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"}