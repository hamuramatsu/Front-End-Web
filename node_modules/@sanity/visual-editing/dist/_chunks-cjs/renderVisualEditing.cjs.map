{"version":3,"file":"renderVisualEditing.cjs","sources":["../../src/ui/renderVisualEditing.tsx"],"sourcesContent":["/**\n * The purpose of this file is to contain the logic for rendering the <VisualEditing />\n * component in a way that is easy to lazy load for the `enableVisualEditing` function.\n */\n\nimport {StrictMode} from 'react'\nimport {createRoot, type Root} from 'react-dom/client'\nimport {OVERLAY_ID} from '../constants'\nimport type {VisualEditingOptions} from '../types'\nimport {VisualEditing} from './VisualEditing'\n\nlet node: HTMLElement | null = null\nlet root: Root | null = null\nlet cleanup: ReturnType<typeof setTimeout> | null = null\n\nexport function renderVisualEditing(\n  signal: AbortSignal,\n  {components, history, refresh, zIndex}: VisualEditingOptions,\n): void {\n  // Cancel pending cleanups, this is useful to avoid overlays blinking as the parent app transition between URLs, or hot module reload is happening\n  if (cleanup) clearTimeout(cleanup)\n  // Setup a cleanup function listener right away, as the signal might abort in-between the next steps\n  signal.addEventListener('abort', () => {\n    // Handle React StrictMode, delay cleanup for a second in case it's a rerender\n    cleanup = setTimeout(() => {\n      if (root) {\n        root.unmount()\n        root = null\n      }\n      if (node) {\n        node.parentNode!.removeChild(node)\n\n        node = null\n      }\n    }, 1000)\n  })\n\n  if (!node) {\n    // eslint-disable-next-line no-warning-comments\n    // @TODO use 'sanity-visual-editing' instead of 'div'\n    node = document.createElement('div')\n    // eslint-disable-next-line no-warning-comments\n    // @TODO after the element is `sanity-visual-editing` instead of `div`, stop setting this ID\n    node.id = OVERLAY_ID\n\n    // render sanity-visual-editing after closing </body> tag\n    document.body.parentNode!.insertBefore(node, document.body.nextSibling)\n  }\n\n  if (!root) {\n    root = createRoot(node)\n  }\n\n  root.render(\n    <StrictMode>\n      <VisualEditing components={components} history={history} refresh={refresh} zIndex={zIndex} />\n    </StrictMode>,\n  )\n}\n"],"names":["node","root","cleanup","exports","renderVisualEditing","signal","components","history","refresh","zIndex","clearTimeout","addEventListener","setTimeout","unmount","parentNode","removeChild","document","createElement","id","OVERLAY_ID","body","insertBefore","nextSibling","createRoot","render","jsx","StrictMode","children","VisualEditing"],"mappings":"uKAWA,IAAIA,EAA2B,KAC3BC,EAAoB,KACpBC,EAAgD,KA6CpDC,QAAAC,oBA3CO,SACLC,GACAC,WAACA,EAAAA,QAAYC,EAAAA,QAASC,EAAAA,OAASC,IAG3BP,GAASQ,aAAaR,GAE1BG,EAAOM,iBAAiB,SAAS,KAE/BT,EAAUU,YAAW,KAEjBX,IAAAA,EAAKY,UACLZ,EAAO,MAELD,IACFA,EAAKc,WAAYC,YAAYf,GAE7BA,EAAO,KAAA,GAER,IAAI,IAGJA,IAGHA,EAAOgB,SAASC,cAAc,OAG9BjB,EAAKkB,GAAKC,IAGVH,SAASI,KAAKN,WAAYO,aAAarB,EAAMgB,SAASI,KAAKE,cAGxDrB,IACHA,EAAOsB,EAAAA,WAAWvB,IAGpBC,EAAKuB,SACHC,IAACC,aACC,CAAAC,SAAAF,MAACG,EAAAA,eAActB,aAAwBC,UAAkBC,UAAkBC,aAGjF"}