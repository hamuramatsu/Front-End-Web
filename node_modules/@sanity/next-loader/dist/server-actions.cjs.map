{"version":3,"file":"server-actions.cjs","sources":["../../preview-url-secret/dist/constants.js","../src/utils.ts","../src/server-actions/index.ts"],"sourcesContent":["const schemaType = \"sanity.previewUrlSecret\", schemaIdPrefix = \"sanity-preview-url-secret\", schemaIdSingleton = `${schemaIdPrefix}.share-access`, schemaTypeSingleton = \"sanity.previewUrlShareAccess\", apiVersion = \"2023-11-09\", urlSearchParamPreviewSecret = \"sanity-preview-secret\", urlSearchParamPreviewPathname = \"sanity-preview-pathname\", urlSearchParamPreviewPerspective = \"sanity-preview-perspective\", isDev = process.env.NODE_ENV === \"development\", SECRET_TTL = 60 * 60, fetchSecretQuery = (\n  /* groq */\n  `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n    _id,\n    _updatedAt,\n    secret,\n    studioUrl,\n  }`\n), fetchSharedAccessQuery = (\n  /* groq */\n  `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\"][0].secret`\n), fetchSharedAccessSecretQuery = (\n  /* groq */\n  `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\" && secret == $secret][0]{\n  secret,\n  studioUrl,\n}`\n), deleteExpiredSecretsQuery = (\n  /* groq */\n  `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]`\n), tag = \"sanity.preview-url-secret\", perspectiveCookieName = \"sanity-preview-perspective\";\nexport {\n  SECRET_TTL,\n  apiVersion,\n  deleteExpiredSecretsQuery,\n  fetchSecretQuery,\n  fetchSharedAccessQuery,\n  fetchSharedAccessSecretQuery,\n  isDev,\n  perspectiveCookieName,\n  schemaIdPrefix,\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n  tag,\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret\n};\n//# sourceMappingURL=constants.js.map\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type {ClientPerspective} from '@sanity/client'\n\n/** @internal */\nexport function sanitizePerspective(\n  perspective: string | undefined,\n  fallback: 'previewDrafts' | 'published',\n) {\n  switch (perspective) {\n    case 'previewDrafts':\n    case 'published':\n      return perspective satisfies ClientPerspective\n    default:\n      return fallback satisfies ClientPerspective\n  }\n}\n","'use server'\n\nimport type {ClientPerspective, SyncTag} from '@sanity/client'\nimport {perspectiveCookieName} from '@sanity/preview-url-secret/constants'\nimport {revalidateTag} from 'next/cache.js'\nimport {cookies, draftMode} from 'next/headers.js'\nimport {sanitizePerspective} from '../utils'\n\n// export async function disableDraftMode(): Promise<void> {\n//   'use server'\n//   await Promise.allSettled([\n//     (await draftMode()).disable(),\n//     // Simulate a delay to show the loading state\n//     new Promise((resolve) => setTimeout(resolve, 1000)),\n//   ])\n// }\n\nexport async function revalidateSyncTags(tags: SyncTag[]): Promise<void> {\n  for (const _tag of tags) {\n    const tag = `sanity:${_tag}`\n    await revalidateTag(tag)\n    // eslint-disable-next-line no-console\n    console.log(`<SanityLive /> revalidated tag: ${tag}`)\n  }\n}\n\nexport async function setPerspectiveCookie(perspective: string): Promise<void> {\n  if (!(await draftMode()).isEnabled) {\n    // throw new Error('Draft mode is not enabled, setting perspective cookie is not allowed')\n    return\n  }\n  const sanitizedPerspective = sanitizePerspective(perspective, 'previewDrafts')\n  if (perspective !== sanitizedPerspective) {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  ;(await cookies()).set(perspectiveCookieName, perspective satisfies ClientPerspective, {\n    httpOnly: true,\n    path: '/',\n    secure: true,\n    sameSite: 'none',\n  })\n}\n\n// export async function handleDraftModeActionMissing(): Promise<void | string> {\n//   return 'The <SanityLive /> component is missing the handleDraftModeAction prop'\n// }\n"],"names":["revalidateTag","draftMode","cookies"],"mappings":";;;;AAAM,MAoBgC,wBAAwB;ACf9C,SAAA,oBACd,aACA,UACA;AACA,UAAQ,aAAa;AAAA,IACnB,KAAK;AAAA,IACL,KAAK;AACI,aAAA;AAAA,IACT;AACS,aAAA;AAAA,EAAA;AAEb;ACCA,eAAsB,mBAAmB,MAAgC;AACvE,aAAW,QAAQ,MAAM;AACjB,UAAA,MAAM,UAAU,IAAI;AAC1B,UAAMA,uBAAc,GAAG,GAEvB,QAAQ,IAAI,mCAAmC,GAAG,EAAE;AAAA,EAAA;AAExD;AAEA,eAAsB,qBAAqB,aAAoC;AACzE,MAAA,EAAE,MAAMC,WAAA,UAAA,GAAa;AAEvB;AAEI,QAAA,uBAAuB,oBAAoB,aAAa,eAAe;AAC7E,MAAI,gBAAgB;AAClB,UAAM,IAAI,MAAM,wBAAwB,WAAW,EAAE;AAGtD,GAAC,MAAMC,WAAAA,QAAW,GAAA,IAAI,uBAAuB,aAAyC;AAAA,IACrF,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,EAAA,CACX;AACH;;;"}