{"version":3,"file":"utils.js","sources":["../../../preview-url-secret/dist/constants.js","../../src/utils.ts"],"sourcesContent":["const schemaType = \"sanity.previewUrlSecret\", schemaIdPrefix = \"sanity-preview-url-secret\", schemaIdSingleton = `${schemaIdPrefix}.share-access`, schemaTypeSingleton = \"sanity.previewUrlShareAccess\", apiVersion = \"2023-11-09\", urlSearchParamPreviewSecret = \"sanity-preview-secret\", urlSearchParamPreviewPathname = \"sanity-preview-pathname\", urlSearchParamPreviewPerspective = \"sanity-preview-perspective\", isDev = process.env.NODE_ENV === \"development\", SECRET_TTL = 60 * 60, fetchSecretQuery = (\n  /* groq */\n  `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n    _id,\n    _updatedAt,\n    secret,\n    studioUrl,\n  }`\n), fetchSharedAccessQuery = (\n  /* groq */\n  `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\"][0].secret`\n), fetchSharedAccessSecretQuery = (\n  /* groq */\n  `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\" && secret == $secret][0]{\n  secret,\n  studioUrl,\n}`\n), deleteExpiredSecretsQuery = (\n  /* groq */\n  `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]`\n), tag = \"sanity.preview-url-secret\", perspectiveCookieName = \"sanity-preview-perspective\";\nexport {\n  SECRET_TTL,\n  apiVersion,\n  deleteExpiredSecretsQuery,\n  fetchSecretQuery,\n  fetchSharedAccessQuery,\n  fetchSharedAccessSecretQuery,\n  isDev,\n  perspectiveCookieName,\n  schemaIdPrefix,\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n  tag,\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret\n};\n//# sourceMappingURL=constants.js.map\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type {ClientPerspective} from '@sanity/client'\n\n/** @internal */\nexport function sanitizePerspective(\n  perspective: string | undefined,\n  fallback: 'previewDrafts' | 'published',\n) {\n  switch (perspective) {\n    case 'previewDrafts':\n    case 'published':\n      return perspective satisfies ClientPerspective\n    default:\n      return fallback satisfies ClientPerspective\n  }\n}\n"],"names":[],"mappings":"AAAM,MAoBgC,wBAAwB;ACf9C,SAAA,oBACd,aACA,UACA;AACA,UAAQ,aAAa;AAAA,IACnB,KAAK;AAAA,IACL,KAAK;AACI,aAAA;AAAA,IACT;AACS,aAAA;AAAA,EAAA;AAEb;"}