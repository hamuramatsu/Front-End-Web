{"version":3,"file":"PresentationComlink.cjs","sources":["../../../visual-editing-helpers/dist/index.js","../../src/client-components/live/PresentationComlink.tsx"],"sourcesContent":["import { createListenLogic, createRequestMachine, DOMAIN, MSG_HANDSHAKE_SYN, MSG_HANDSHAKE_SYN_ACK, MSG_HANDSHAKE_ACK, MSG_RESPONSE, MSG_HEARTBEAT, MSG_DISCONNECT } from \"@sanity/comlink\";\nimport { MSG_RESPONSE as MSG_RESPONSE2 } from \"@sanity/comlink\";\nimport { studioPath } from \"@sanity/client/csm\";\nimport { encodeSanityNodeData } from \"./_chunks-es/transformSanityNodeData.js\";\nimport { pathToUrlString, urlStringToPath } from \"./_chunks-es/transformSanityNodeData.js\";\nconst channelsToComlinkMap = {\n  \"handshake/syn\": MSG_HANDSHAKE_SYN,\n  \"handshake/syn-ack\": MSG_HANDSHAKE_SYN_ACK,\n  \"handshake/ack\": MSG_HANDSHAKE_ACK,\n  \"channel/response\": MSG_RESPONSE,\n  \"channel/heartbeat\": MSG_HEARTBEAT,\n  \"channel/disconnect\": MSG_DISCONNECT,\n  \"overlay/focus\": \"visual-editing/focus\",\n  \"overlay/navigate\": \"visual-editing/navigate\",\n  \"overlay/toggle\": \"visual-editing/toggle\",\n  \"presentation/toggleOverlay\": \"presentation/toggle-overlay\"\n}, comlinkToChannelsMap = {\n  [MSG_HANDSHAKE_SYN]: \"handshake/syn\",\n  [MSG_HANDSHAKE_SYN_ACK]: \"handshake/syn-ack\",\n  [MSG_HANDSHAKE_ACK]: \"handshake/ack\",\n  [MSG_RESPONSE]: \"channel/response\",\n  [MSG_HEARTBEAT]: \"channel/heartbeat\",\n  [MSG_DISCONNECT]: \"channel/disconnect\",\n  \"visual-editing/focus\": \"overlay/focus\",\n  \"visual-editing/navigate\": \"overlay/navigate\",\n  \"visual-editing/toggle\": \"overlay/toggle\",\n  \"presentation/toggle-overlay\": \"presentation/toggleOverlay\"\n}, convertToComlinkEvent = (event) => {\n  const { data } = event;\n  return data && typeof data == \"object\" && \"domain\" in data && \"type\" in data && \"from\" in data && \"to\" in data && (data.domain === \"sanity/channels\" && (data.domain = DOMAIN), data.to === \"overlays\" && (data.to = \"visual-editing\"), data.from === \"overlays\" && (data.from = \"visual-editing\"), data.channelId = data.connectionId, delete data.connectionId, data.type = channelsToComlinkMap[data.type] ?? data.type), event;\n}, convertToChannelsMessage = (comlinkMessage) => {\n  const { channelId, ...rest } = comlinkMessage, message = { ...rest, connectionId: channelId };\n  return message.domain === DOMAIN && (message.domain = \"sanity/channels\"), message.to === \"visual-editing\" && (message.to = \"overlays\"), message.from === \"visual-editing\" && (message.from = \"overlays\"), message.type = comlinkToChannelsMap[message.type] ?? message.type, message.type === \"channel/response\" && message.responseTo && !message.data && (message.data = { responseTo: message.responseTo }), (message.type === \"handshake/syn\" || message.type === \"handshake/syn-ack\" || message.type === \"handshake/ack\") && (message.data = { id: message.connectionId }), message;\n}, sendAsChannelsMessage = ({ context }, params) => {\n  const { sources, targetOrigin } = context, message = convertToChannelsMessage(params.message);\n  sources.forEach((source) => {\n    source.postMessage(message, { targetOrigin });\n  });\n}, createCompatibilityActors = () => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine().provide({\n    actions: {\n      \"send message\": sendAsChannelsMessage\n    }\n  })\n});\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString({\n    ...props,\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  });\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute({\n      ...props,\n      ...attrs\n    });\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute({\n      ...props,\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    });\n  }, DataAttribute;\n}\nfunction getQueryCacheKey(query, params) {\n  return `${query}-${typeof params == \"string\" ? params : JSON.stringify(params)}`;\n}\nconst IS_MAC = typeof window < \"u\" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform), MODIFIERS = {\n  alt: \"altKey\",\n  ctrl: \"ctrlKey\",\n  mod: IS_MAC ? \"metaKey\" : \"ctrlKey\",\n  shift: \"shiftKey\"\n};\nfunction isHotkey(keys, event) {\n  return keys.every((key) => MODIFIERS[key] ? event[MODIFIERS[key]] : event.key === key.toUpperCase());\n}\nfunction isModKey(event) {\n  return event.key === (IS_MAC ? \"Meta\" : \"Ctrl\");\n}\nfunction isAltKey(event) {\n  return event.key === \"Alt\";\n}\nexport {\n  MSG_RESPONSE2 as MSG_RESPONSE,\n  createCompatibilityActors,\n  createDataAttribute,\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  isModKey,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=index.js.map\n","import {\n  createCompatibilityActors,\n  type LoaderControllerMsg,\n  type LoaderNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport {\n  createNode,\n  createNodeMachine,\n  // type Node,\n} from '@sanity/comlink'\nimport {setPerspectiveCookie} from '@sanity/next-loader/server-actions'\nimport {useRouter} from 'next/navigation.js'\nimport {\n  useEffect,\n  // useState\n} from 'react'\nimport {useEffectEvent} from 'use-effect-event'\nimport {setComlink} from '../../hooks/context'\n\nfunction PresentationComlink(props: {\n  // projectId: string\n  // dataset: string\n  // handleDraftModeAction: (secret: string) => Promise<void | string>\n  draftModeEnabled: boolean\n  draftModePerspective: ClientPerspective\n}): React.JSX.Element | null {\n  const {draftModeEnabled, draftModePerspective} = props\n  const router = useRouter()\n\n  // const [presentationComlink, setPresentationComlink] = useState<Node<\n  //   LoaderControllerMsg,\n  //   LoaderNodeMsg\n  // > | null>(null)\n\n  const handlePerspectiveChange = useEffectEvent(\n    (perspective: ClientPerspective, signal: AbortSignal) => {\n      if (draftModeEnabled && perspective !== draftModePerspective) {\n        setPerspectiveCookie(perspective)\n          .then(() => {\n            if (signal.aborted) return\n            router.refresh()\n          })\n          // eslint-disable-next-line no-console\n          .catch((reason) => console.error('Failed to set the preview perspective cookie', reason))\n      }\n    },\n  )\n\n  // const [status, setStatus] = useState('disconnected')\n  useEffect(() => {\n    const comlink = createNode<LoaderNodeMsg, LoaderControllerMsg>(\n      {\n        name: 'loaders',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<LoaderNodeMsg, LoaderControllerMsg>().provide({\n        actors: createCompatibilityActors<LoaderNodeMsg>(),\n      }),\n    )\n\n    // comlink.onStatus((status) => {\n    //   setStatus(status)\n    // })\n\n    let controller: AbortController | undefined\n    comlink.on('loader/perspective', (data) => {\n      controller?.abort()\n      controller = new AbortController()\n      handlePerspectiveChange(data.perspective, controller.signal)\n    })\n\n    const stop = comlink.start()\n    // setPresentationComlink(comlink)\n    setComlink(comlink)\n    // eslint-disable-next-line no-console\n    // console.log('setting comlink', comlink)\n    return () => {\n      // eslint-disable-next-line no-console\n      // console.log('stopping comlink')\n      stop()\n    }\n  }, [handlePerspectiveChange])\n\n  // @TODO come back to this later\n  // const handleEnableDraftMode = useEffectEvent(async (signal: AbortSignal) => {\n  //   if (signal.aborted) return\n  //   const {secret} = await (presentationComlink?.fetch(\n  //     {\n  //       type: 'loader/fetch-preview-url-secret' as const,\n  //       data: {projectId, dataset},\n  //     },\n  //     {signal},\n  //   ) || {secret: null})\n  //   if (signal.aborted) return\n  //   const error = await handleDraftModeAction(secret!)\n  //   // eslint-disable-next-line no-console\n  //   // @TODO call another server action here that can tell us if draft mode is actually enabled\n  //   if (error) {\n  //     // @TODO use sonnet or whatever to push a toast with the error\n  //     // eslint-disable-next-line no-console\n  //     console.error('Error enabling draft mode', error)\n  //     return\n  //   }\n  //   // console.log('Draft mode enabled?', {enabled})\n  //   if (signal.aborted) return\n  //   router.refresh()\n  // })\n  // const connected = status === 'connected'\n  // useEffect(() => {\n  //   if (connected && !draftModeEnabled) {\n  //     const controller = new AbortController()\n  //     handleEnableDraftMode(controller.signal).catch((reason) => {\n  //       // eslint-disable-next-line no-console\n  //       console.error('Failed to enable draft mode', reason)\n  //       return handleEnableDraftMode(controller.signal)\n  //     })\n  //     return () => {\n  //       controller.abort()\n  //     }\n  //   }\n  //   return undefined\n  // }, [connected, draftModeEnabled, handleEnableDraftMode])\n\n  return null\n}\nPresentationComlink.displayName = 'PresentationComlink'\n\nexport default PresentationComlink\n"],"names":["MSG_HANDSHAKE_SYN","MSG_HANDSHAKE_SYN_ACK","MSG_HANDSHAKE_ACK","MSG_RESPONSE","MSG_HEARTBEAT","MSG_DISCONNECT","DOMAIN","context","createListenLogic","createRequestMachine","useRouter","useEffectEvent","setPerspectiveCookie","useEffect","comlink","createNode","createNodeMachine","setComlink"],"mappings":"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"}